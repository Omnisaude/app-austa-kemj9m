apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: austa
  labels:
    app: austa-superapp
    service: auth
    component: security
    tier: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4000"
    prometheus.io/path: "/metrics"
    security.compliance/hipaa: "enabled"
    security.compliance/lgpd: "enabled"
    security.policy/encryption: "required"
    security.policy/audit: "full"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: austa-superapp
      service: auth
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: austa-superapp
        service: auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: auth-service-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: auth-service
        image: austa-superapp/auth-service:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 4000
          protocol: TCP
        - name: metrics
          containerPort: 4001
          protocol: TCP
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        envFrom:
        - configMapRef:
            name: austa-superapp-config
            prefix: AUTH_
        - secretRef:
            name: austa-superapp-secrets
            prefix: AUTH_
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "4000"
        - name: METRICS_PORT
          value: "4001"
        volumeMounts:
        - name: auth-service-config
          mountPath: /app/config
          readOnly: true
        - name: auth-service-secrets
          mountPath: /app/secrets
          readOnly: true
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 4000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
      volumes:
      - name: auth-service-config
        configMap:
          name: austa-superapp-config
      - name: auth-service-secrets
        secret:
          secretName: austa-superapp-secrets
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - auth
            topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            service: auth