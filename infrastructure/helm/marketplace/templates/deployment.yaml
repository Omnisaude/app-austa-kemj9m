apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "marketplace.fullname" . }}
  labels:
    {{- include "marketplace.labels" . | nindent 4 }}
    app.kubernetes.io/component: marketplace
    app.kubernetes.io/part-of: austa-superapp
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "marketplace.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "marketplace.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "{{ .Values.monitoring.prometheus.scrape }}"
        prometheus.io/port: "{{ .Values.monitoring.prometheus.port }}"
        prometheus.io/path: "{{ .Values.monitoring.prometheus.path }}"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        fluentbit.io/parser: "{{ .Values.monitoring.logging.parser }}"
    spec:
      serviceAccountName: {{ include "marketplace.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3005
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
            - name: PORT
              value: {{ .Values.env.PORT | quote }}
            - name: ELASTICSEARCH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "marketplace.fullname" . }}-secrets
                  key: elasticsearch-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "marketplace.fullname" . }}-secrets
                  key: redis-url
            - name: CACHE_TTL
              value: {{ .Values.env.CACHE_TTL | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL | quote }}
            - name: METRICS_ENABLED
              value: {{ .Values.env.METRICS_ENABLED | quote }}
            - name: TRACING_ENABLED
              value: {{ .Values.monitoring.tracing.enabled | quote }}
            - name: MAX_PAYLOAD_SIZE
              value: {{ .Values.env.MAX_PAYLOAD_SIZE | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "marketplace.fullname" . }}-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "marketplace.name" . }}
                topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "marketplace.name" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}