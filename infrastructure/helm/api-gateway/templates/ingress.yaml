apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
  annotations:
    # Ingress class and certificate management
    kubernetes.io/ingress.class: {{ .Values.ingress.className | quote }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.annotations.cert-manager.io/cluster-issuer | quote }}
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; frame-ancestors 'none'";
    
    # WAF and security controls
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On
      SecAuditEngine RelevantOnly
      SecAuditLogParts ABIJDEFHZ
    
    # Rate limiting and DDoS protection
    nginx.ingress.kubernetes.io/limit-rps: {{ .Values.ingress.annotations.nginx.ingress.kubernetes.io/limit-rps | quote }}
    nginx.ingress.kubernetes.io/limit-connections: {{ .Values.security.rateLimit.connections | quote }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.ingress.annotations.nginx.ingress.kubernetes.io/proxy-body-size | quote }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    
    # Health checks and monitoring
    nginx.ingress.kubernetes.io/healthcheck-path: "/health"
    nginx.ingress.kubernetes.io/healthcheck-interval: "10"
    nginx.ingress.kubernetes.io/healthcheck-timeout: "5"
    nginx.ingress.kubernetes.io/healthcheck-status-codes: "200"
    prometheus.io/scrape: "true"
    prometheus.io/port: {{ .Values.metrics.serviceMonitor.port | quote }}
    prometheus.io/path: "/metrics"

spec:
  tls:
    - hosts:
        - {{ .Values.ingress.hosts[0].host }}
      secretName: {{ .Values.ingress.tls[0].secretName }}
  rules:
    - host: {{ .Values.ingress.hosts[0].host }}
      http:
        paths:
          - path: {{ .Values.ingress.hosts[0].paths[0].path }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "api-gateway.fullname" . }}
                port:
                  name: proxy-http