---
# AUSTA SuperApp Platform Deployment Playbook
# Version: 1.0.0
# Dependencies:
# - community.kubernetes: 2.0.0
# - community.docker: 3.0.0
# - community.aws: 5.0.0

- name: Deploy AUSTA SuperApp Platform
  hosts: "{{ hosts | default('all') }}"
  gather_facts: true
  become: true
  vars:
    environment: "{{ env | default('production') }}"
    compliance_mode: "{{ compliance | default('hipaa') }}"
    security_level: "{{ security | default('high') }}"
    environment_specific: "{{ lookup('file', '../inventory/' + env + '.yml') }}"
    common_vars: "{{ lookup('file', '../inventory/group_vars/all.yml') }}"
    security_vars: "{{ lookup('file', '../inventory/group_vars/security.yml') }}"
    compliance_vars: "{{ lookup('file', '../inventory/group_vars/compliance.yml') }}"

  pre_tasks:
    - name: Validate deployment environment
      assert:
        that:
          - environment in ['dev', 'staging', 'prod', 'dr']
          - compliance_mode in ['hipaa', 'lgpd']
          - security_level in ['high', 'medium']
        msg: "Invalid environment, compliance mode, or security level configuration"
      tags: ['validation', 'pre-deploy']

    - name: Import common tasks
      include_tasks: "../roles/common/tasks/main.yml"
      vars:
        task_list:
          - validate_prerequisites
          - update_system
          - configure_system
          - install_dependencies
      tags: ['common', 'setup']

  roles:
    - role: common
      tags: ['common']
    - role: security
      tags: ['security']
    - role: monitoring
      tags: ['monitoring']

  tasks:
    - name: Configure infrastructure security
      block:
        - name: Setup KMS encryption
          include_tasks: "../roles/security/tasks/main.yml"
          vars:
            task: configure_encryption
            kms_config:
              key_rotation: true
              encryption_type: "aes-256-gcm"
              key_aliases:
                - "alias/{{ environment }}/health-records"
                - "alias/{{ environment }}/claims"
      tags: ['security', 'encryption']

    - name: Deploy monitoring stack
      block:
        - name: Setup monitoring components
          include_tasks: "../roles/monitoring/tasks/main.yml"
          vars:
            prometheus_version: "v2.45.0"
            grafana_version: "10.0.0"
            elasticsearch_version: "8.9.0"
            monitoring_namespace: "monitoring-{{ environment }}"
            ssl_cert_path: "/etc/ssl/monitoring"
      tags: ['monitoring']

    - name: Configure WAF and security policies
      block:
        - name: Setup WAF rules
          include_tasks: "../roles/security/tasks/main.yml"
          vars:
            task: configure_waf
            waf_config:
              name: "{{ environment }}-austa-superapp-waf"
              rate_limit: 2000
              rules:
                - AWSManagedRulesCommonRuleSet
                - AWSManagedRulesSQLiRuleSet
      tags: ['security', 'waf']

    - name: Deploy application components
      block:
        - name: Deploy Kubernetes resources
          k8s:
            state: present
            definition: "{{ lookup('template', item) }}"
          with_fileglob:
            - "../../../src/backend/k8s/*.yml"
          vars:
            k8s_namespace: "{{ environment }}"
            security_context:
              runAsNonRoot: true
              runAsUser: 1000
              fsGroup: 1000
      tags: ['deploy', 'kubernetes']

    - name: Configure HIPAA compliance monitoring
      block:
        - name: Setup compliance monitoring
          include_tasks: "../roles/monitoring/tasks/main.yml"
          vars:
            task: configure_compliance_monitoring
            compliance_config:
              audit_retention: 180
              encryption_enabled: true
              monitoring_enabled: true
      tags: ['compliance', 'monitoring']

  post_tasks:
    - name: Verify deployment
      block:
        - name: Check service health
          uri:
            url: "https://{{ item.host }}/health"
            validate_certs: true
            return_content: true
          with_items:
            - { host: "api.{{ environment }}.austa-superapp.com" }
            - { host: "monitoring.{{ environment }}.austa-superapp.com" }
          register: health_checks
          until: health_checks.status == 200
          retries: 6
          delay: 10
      tags: ['verification']

  handlers:
    - name: Restart services
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - prometheus
        - grafana
        - elasticsearch
      listen: "restart monitoring"

    - name: Reload configurations
      command: "kubectl rollout restart deployment {{ item }} -n {{ environment }}"
      with_items:
        - api-gateway
        - virtual-care
        - health-records
        - claims
      listen: "reload services"

    - name: Update deployment status
      command: "/usr/local/bin/update-deployment-status {{ environment }}"
      listen: "update status"